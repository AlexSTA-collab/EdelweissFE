*material, name=LinearElastic, id=myMaterial
**Isotropic
**E    nu
1000, 0.2

*job, name=job, domain=2d, solver=NIST

*modelGenerator, generator=planerectquad, name=gen
nX      =5
nY      =5
l      =20
h      =50
elType  = CPE4

*section, name=section1, material=myMaterial, type=plane, thickness=1
all

*fieldOutput,
elSet=all, field=displacement, result=U, name=displacement
nSet=gen_top, field=displacement, result=U, name=disp_top
nSet=gen_bottom, field=displacement, result=P, name=RF
elSet=all, result=strain, name=strain, quadraturePoint=0:4, f(x)='np.mean(x,axis=1)'
elSet=all, result=stress, name=stress, quadraturePoint=0:4, f(x)='np.mean(x,axis=1)'

*output, type=ensight, 
create=perNode, fieldOutput=displacement
create=perElement, fieldOutput=stress
create=perElement, fieldOutput=strain
configuration, overwrite=yes

*output, type=monitor, name=dispMon
fieldOutput=disp_top, f(x)='mean(x[:,1])'
fieldOutput=RF, f(x)='sum(x[:,1])'

*nset, nset=measurement_nodes
gen_leftBottom
gen_leftTop

*constraint, type=penaltyindirectcontrol, name=pc1
field=displacement,
cVector='0, 0, 0, -1'
constrainedNSet=measurement_nodes
loadNSet=gen_rightTop
loadVector='0, -1'
length=-1
penaltyStiffness=1e6
offset=0

*step, maxInc=1e0, minInc=1e0, maxNumInc=100, maxIter=25, stepLength=1
modelupdate, update='constraints["pc1"].active=False'
dirichlet,  name=fix_bottom, nSet=gen_bottom, field=displacement, 1=0, 2=0

*step, maxInc=2e-2, minInc=1e-6, maxNumInc=1000, maxIter=25, stepLength=1
modelupdate, update='constraints["pc1"].active=True'
