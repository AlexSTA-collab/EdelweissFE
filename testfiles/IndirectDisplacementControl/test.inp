*job, name=job, domain=3d

*solver, solver=NISTPArcLength, name=NISTPArcLen 

*modelGenerator, generator=boxGen, name=gen
lX     = 100
lY     = 1
lZ     = 1
nX     = 9
nY     = 1
nZ     = 1
elType = GC3D8

*material, name=gcdp, id=concrete
**E         nu      fcy         fcu         fbu         ftu         Df          Ah        
100.0,      0.00,   10,         30,         35,         3.00,       0.85,       0.12, 
**Bh        Ch      Dh          As          softmod     l           m           omegaMax 
0.003,      2.0,    1e-6,       15.0,       .1,         2,          1.05,       1,
**derivativeMethod, dTThresholdElasticStiffness
1,                  1e-8

*section, name=concrete, material=concrete, type=solid
all

*modelGenerator, generator=findClosestNode, name=closestN1, executeAfterManualGeneration=True
location='40, 0, 0'
storeIn=IDC1

*modelGenerator, generator=findClosestNode, name=closestN2, executeAfterManualGeneration=True
location='60, 0, 0'
storeIn=IDC2

*step, maxInc=1, minInc=1, maxNumInc=100000, maxIter=25, stepLength=1, solver=NISTPArcLen
setfield,   name=omegaIni,  fieldOutput=alphaDWeak, value=1e-2, type=uniform

*step, maxInc=1e-2, startInc=1e-2, minInc=1e-6, maxNumInc=100000, maxIter=25, stepLength=1, solver=NISTPArcLen
options, category=Ensight, intermediateSaveInterval=1, minDTForOutput=0
options, category=NISTArcLength, arcLengthController=indirectcontrol, stopCondition='fieldOutputs["I1pMax"] > 0.01'

indirectcontrol, dof1='model.nodeSets["IDC1"][0].fields["displacement"]', cVector1='[-1,0,0]', dof2='model.nodeSets["IDC2"][0].fields["displacement"]', cVector2='[1,0,0]', L=1., 

dirichlet, name=leftX, nSet=gen_left,  field=displacement, 1=0.
dirichlet, name=leftY, nSet=gen_left,  field=displacement, 2=0.
dirichlet, name=leftZ, nSet=gen_left,  field=displacement, 3=0.
dirichlet, name=right, nSet=gen_right, field=displacement, 1=1.

*fieldOutput
name=displacement,    create=perNode, elSet=all, field=displacement, result=U
name=nonlocal_damage, create=perNode, elSet=all, field=nonlocal damage, result=U 

name=strain, create=perElement, elSet=all, result=strain, quadraturePoint=0:8, f(x)='np.mean(x,axis=1)'
name=stress, create=perElement, elSet=all, result=stress, quadraturePoint=0:8, f(x)='np.mean(x,axis=1)'
name=omega,  create=perElement, elSet=all, result=omega,  quadraturePoint=0:8, f(x)='np.mean(x,axis=1)'
name=alphaP, create=perElement, elSet=all, result=alphaP, quadraturePoint=0:8, f(x)='np.mean(x,axis=1)'
name=alphaD, create=perElement, elSet=all, result=alphaD, quadraturePoint=0:8, f(x)='np.mean(x,axis=1)'
name=I1p,    create=perElement, elSet=all, result=I1p,    quadraturePoint=0:8, f(x)='np.mean(x,axis=1)'

name=I1pMax,    create=perElement, elSet=all, result=I1p,    quadraturePoint=0:8, f(x)='np.max(x)', saveHistory=true
name=alphaDMax, create=perElement, elSet=all, result=alphaD, quadraturePoint=0:8, f(x)='np.max(x)', saveHistory=true
name=omegaMax,  create=perElement, elSet=all, result=omega,  quadraturePoint=0:8, f(x)='np.max(x)', saveHistory=true

name=alphaDWeak, create=perElement, elSet=gen_centerSliceX, result=alphaD, quadraturePoint=0:8

name=U1,  create=perNode, nSet=gen_right, field=displacement, result=U, f(x)='mean(x[:,0])', saveHistory=true, export=U
name=RF1, create=perNode, nSet=gen_right, field=displacement, result=P, f(x)='sum(x[:,0])', saveHistory=true, export=RF

*output, type=ensight, name=test
create=perNode, fieldOutput=displacement
create=perNode, fieldOutput=nonlocal_damage
create=perElement, fieldOutput=omega
create=perElement, fieldOutput=I1p
create=perElement, fieldOutput=alphaP
create=perElement, fieldOutput=alphaD
create=perElement, fieldOutput=stress
create=perElement, fieldOutput=strain
configuration, overwrite=yes

*output, type=meshPlot
figure=1, axSpec=111, create=xyData, x=U1, y=RF1

